//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Commercial_Company
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Commercial_CompanyEntities : DbContext
    {
        public Commercial_CompanyEntities()
            : base("name=Commercial_CompanyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Export_Order> Export_Order { get; set; }
        public virtual DbSet<Export_Qty> Export_Qty { get; set; }
        public virtual DbSet<Import_Item_Date> Import_Item_Date { get; set; }
        public virtual DbSet<Import_Order> Import_Order { get; set; }
        public virtual DbSet<Import_Qty> Import_Qty { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Item_Unit> Item_Unit { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
    
        public virtual ObjectResult<selectImportItems_SP_Result> selectImportItems_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectImportItems_SP_Result>("selectImportItems_SP");
        }
    
        public virtual ObjectResult<SelectItemMovement_Report_Result> SelectItemMovement_Report(string wareNameFrom, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var wareNameFromParameter = wareNameFrom != null ?
                new ObjectParameter("wareNameFrom", wareNameFrom) :
                new ObjectParameter("wareNameFrom", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectItemMovement_Report_Result>("SelectItemMovement_Report", wareNameFromParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SelectItems_Report_Result> SelectItems_Report(string wareName)
        {
            var wareNameParameter = wareName != null ?
                new ObjectParameter("wareName", wareName) :
                new ObjectParameter("wareName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectItems_Report_Result>("SelectItems_Report", wareNameParameter);
        }
    
        public virtual ObjectResult<SelectItems_SP_Result> SelectItems_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectItems_SP_Result>("SelectItems_SP");
        }
    
        public virtual ObjectResult<SelectItemsDuration_Report_Result> SelectItemsDuration_Report(Nullable<int> duration, string durationType)
        {
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var durationTypeParameter = durationType != null ?
                new ObjectParameter("DurationType", durationType) :
                new ObjectParameter("DurationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectItemsDuration_Report_Result>("SelectItemsDuration_Report", durationParameter, durationTypeParameter);
        }
    
        public virtual ObjectResult<SelectItemsExp_Report_Result> SelectItemsExp_Report(Nullable<int> duration)
        {
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectItemsExp_Report_Result>("SelectItemsExp_Report", durationParameter);
        }
    
        public virtual ObjectResult<SelectPermission_SP_Result> SelectPermission_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPermission_SP_Result>("SelectPermission_SP");
        }
    
        public virtual ObjectResult<SelectWarheouse_Report_Result> SelectWarheouse_Report(string wareName)
        {
            var wareNameParameter = wareName != null ?
                new ObjectParameter("wareName", wareName) :
                new ObjectParameter("wareName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWarheouse_Report_Result>("SelectWarheouse_Report", wareNameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
